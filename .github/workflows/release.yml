name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.2.3)'
        required: true
        type: string
      release_type:
        description: 'Type of release'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - prerelease
      release_notes:
        description: 'Custom release notes (optional)'
        required: false
        type: string

env:
  GO_VERSION: '1.24'

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate version format
      run: |
        VERSION="${{ github.event.inputs.version }}"
        if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "❌ Invalid version format: $VERSION"
          echo "✅ Expected format: vX.Y.Z (e.g., v1.2.3)"
          exit 1
        fi
        echo "✅ Version format is valid: $VERSION"
        
    - name: Check if tag already exists
      run: |
        VERSION="${{ github.event.inputs.version }}"
        if git tag | grep -q "^$VERSION$"; then
          echo "❌ Tag $VERSION already exists"
          exit 1
        fi
        echo "✅ Tag $VERSION is available"
        
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Run tests
      run: go test -v ./...
      
    - name: Run go vet
      run: go vet ./...
      
    - name: Build
      run: go build ./...

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [validate]
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Create and push tag
      run: |
        VERSION="${{ github.event.inputs.version }}"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "$VERSION" -m "Release $VERSION"
        git push origin "$VERSION"
        
    - name: Generate changelog
      id: changelog
      run: |
        VERSION="${{ github.event.inputs.version }}"
        PREV_TAG=$(git tag --sort=-version:refname | grep -v "$VERSION" | head -1)
        
        if [ -n "$PREV_TAG" ]; then
          echo "## Changes since $PREV_TAG" > changelog.md
          git log --oneline "$PREV_TAG"..HEAD --pretty=format:"- %s" >> changelog.md
        else
          echo "## Initial Release" > changelog.md
          echo "First release of the arbor logging library." >> changelog.md
        fi
        
        # Add custom notes if provided
        CUSTOM_NOTES="${{ github.event.inputs.release_notes }}"
        if [ -n "$CUSTOM_NOTES" ]; then
          echo "" >> changelog.md
          echo "## Additional Notes" >> changelog.md
          echo "$CUSTOM_NOTES" >> changelog.md
        fi
        
        # Add installation instructions
        echo "" >> changelog.md
        echo "## Installation" >> changelog.md
        echo "\`\`\`go" >> changelog.md
        echo "go get github.com/ternarybob/arbor@$VERSION" >> changelog.md
        echo "\`\`\`" >> changelog.md
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat changelog.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        prerelease: ${{ github.event.inputs.release_type == 'prerelease' }}
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Trigger Go proxy update
      run: |
        VERSION="${{ github.event.inputs.version }}"
        echo "🔄 Triggering Go module proxy update..."
        curl -f "https://proxy.golang.org/github.com/ternarybob/arbor/@v/$VERSION.info" || true
        curl -f "https://sum.golang.org/lookup/github.com/ternarybob/arbor@$VERSION" || true
        echo "✅ Go proxy update triggered"
